services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
  frontend:
    build: ./frontend/paper-app
    container_name: frontend
    env_file: ./frontend/paper-app/.env
    environment:
    - CHOKIDAR_USEPOLLING=true   # ensures file change detection in Docker
    # command: npm run dev -- --host 0.0.0.0
    volumes:
    - ./frontend/paper-app:/app
    - /app/node_modules
    # ports:
    #   - "${FRONTEND_PORT}:5173" 
    depends_on:
      - backend
    # develop:
    #   watch:
    #     - path: ./frontend/paper-app
    #       target: /app
    #       action: sync
    #     - path: ./frontend/paper-app/package.json
    #       action: rebuild
  backend:
    build: 
      context: ./backend
      args:
        - NODE_ENV=production
    # container_name: backend
    # ports:
    #   - "${BACKEND_PORT}:4000"
    develop:
      watch:
        - path: ./backend
          target: /app
          action: sync+restart
        - path: ./backend/package.json
          action: rebuild
    env_file: ./backend/.env
    # command: npm run dev
    command: sh -c "until pg_isready -h postgres -p 5432 -U $POSTGRES_USER; do sleep 2; done && npx prisma migrate deploy && npx prisma generate && npm run dev"
    depends_on:
      - postgres
    # for docker swarm
    deploy:
      mode: replicated
      replicas: 4
      restart_policy:
        condition: on-failure
        delay: 5s
      update_config:
        parallelism: 2
        delay: 10s
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      # POSTGRES_PASSWORD: /run/secrets/my_secret
      POSTGRES_PASSWORD_FILE: /run/secrets/my_secret  
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    # ports:
    #   - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql
    secrets:
      - my_secret
  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

secrets:
  my_secret:
    file: ./secrets/secrets.txt

volumes:
  pgdata:
